name: Build python-exiv2 wheels
on: workflow_dispatch

jobs:
  build:
    name: build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
#        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-13, macos-14, windows-2019]
#        include:
#          - os: macos-13
#            arch: x86_64
#            target: 13.0
#          - os: macos-14
#            arch: arm64
#            target: 14.0
    env:
      EXIV2_SRC: >
        https://github.com/Exiv2/exiv2/archive/refs/tags/v0.28.5.tar.gz
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.target }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: jim-easterbrook/python-exiv2
          ref: devel

      - name: Download exiv2 (not Windows)
        if: ${{ runner.os != 'Windows' }}
        run: >
          mkdir libexiv2 &&
          wget -nv $EXIV2_SRC -O - |
          tar zxf - --directory libexiv2 --strip-components=1

      - name: Download exiv2 (windows)
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          mkdir libexiv2
          c:/msys64/usr/bin/wget.exe -nv $EXIV2_SRC -O - |
          tar zxf - --directory libexiv2 --strip-components=1
          # tweaks to allow NLS
          echo -e "24a25\n>         self.requires('libgettext/0.21')" |
          c:/msys64/usr/bin/patch.exe libexiv2/conanfile.py

      - name: Download gettext
        if: ${{ runner.os == 'Windows' }}
        env:
          SRC: https://github.com/mlocati/gettext-iconv-windows/releases/download/v0.21-v1.16/gettext0.21-iconv1.16-shared-64.zip
        shell: bash
        run: |
          mkdir gettext
          cd gettext
          c:/msys64/usr/bin/wget.exe -nv $SRC -O - |
          unzip -p -

      - name: Install Python
        if: ${{ runner.os == 'Windows' }}
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install cmake
        if: ${{ runner.os == 'Windows' }}
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install ninja
        if: ${{ runner.os == 'Windows' }}
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Download inih
        if: ${{ runner.os == 'Linux' }}
        env:
          SRC: https://github.com/benhoyt/inih/archive/r58/inih-r58.tar.gz
        run: >
          mkdir inih &&
          wget -nv $SRC -O - |
          tar zxf - --directory inih --strip-components=1

      - name: Build exiv2 (windows)
        if: ${{ runner.os == 'Windows' }}
        env:
          PATH: "${{ github.workspace }}\\gettext\\bin"
        run: >
          pip install conan==1.59.0 &&
          cd libexiv2 &&
          cmake --preset msvc
          -D CMAKE_BUILD_TYPE=Release
          -D EXIV2_BUILD_SAMPLES=OFF
          -D EXIV2_BUILD_EXIV2_COMMAND=OFF
          -D EXIV2_BUILD_UNIT_TESTS=OFF
          -D EXIV2_ENABLE_NLS=ON
          -D EXIV2_ENABLE_FILESYSTEM_ACCESS=ON
          -G "Visual Studio 16 2019" &&
          cmake --build build-msvc --config Release &&
          cmake --install build-msvc --config Release &&
          copy build-msvc\bin\libcurl.dll build-msvc\install\bin

      - name: Build exiv2 (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: >
          brew install inih &&
          cd libexiv2 &&
          cmake --preset base_mac
          -D CMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
          -D EXIV2_BUILD_SAMPLES=OFF
          -D EXIV2_BUILD_UNIT_TESTS=OFF
          -D EXIV2_ENABLE_NLS=ON
          -D EXIV2_ENABLE_FILESYSTEM_ACCESS=ON
          -D EXIV2_BUILD_EXIV2_COMMAND=OFF
          -D EXIV2_TEAM_WARNINGS_AS_ERRORS=OFF &&
          cmake --build build-base_mac --config Release &&
          cmake --install build-base_mac --config Release

      - name: Build wheels
        # cibuildwheel@v3.x omits Python 3.6 & 3.7
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_ARCHS: auto64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_ENVIRONMENT_LINUX: >
            EXIV2_ROOT=libexiv2/build-linux-release/install
          CIBW_ENVIRONMENT_MACOS: >
            EXIV2_ROOT=libexiv2/build-base_mac/install
          CIBW_ENVIRONMENT_WINDOWS: >
            EXIV2_ROOT=libexiv2/build-msvc/install
          CIBW_BUILD: "cp38*"
          CIBW_SKIP: "*musllinux*"
          CIBW_TEST_COMMAND: >
            python3 -m exiv2 -v &&
            python3 -m unittest discover {project}/tests -v
          CIBW_BEFORE_ALL_LINUX: >
            yum install -y --nogpgcheck zlib-devel expat-devel gettext-devel
            libcurl-devel brotli-devel meson &&
            localedef -c -i de_DE -f UTF-8 de_DE.UTF-8 &&
            pip install ninja &&
            cd inih && mkdir build && cd build &&
            meson setup --prefix=/usr --buildtype=release .. &&
            ninja && ninja install &&
            cd ../../libexiv2 &&
            cmake --preset linux-release
            -D CONAN_AUTO_INSTALL=OFF
            -D EXIV2_BUILD_SAMPLES=OFF
            -D EXIV2_BUILD_UNIT_TESTS=OFF
            -D EXIV2_ENABLE_NLS=ON
            -D EXIV2_ENABLE_FILESYSTEM_ACCESS=ON
            -D EXIV2_BUILD_EXIV2_COMMAND=OFF
            -D EXIV2_TEAM_WARNINGS_AS_ERRORS=OFF &&
            cmake --build build-linux-release --config Release &&
            cmake --install build-linux-release --config Release

      - name: Store results
        uses: actions/upload-artifact@v4
        with:
          name: exiv2-wheels-${{ runner.os }}-${{ runner.arch }}
          path: wheelhouse/*.whl
